# Generated by Selenium IDE
import pytest
import time
import json
import logging
import os
import configparser
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from TestTool.init import *
from TestTool.control import *
from TestTool.task import *



class SeleniumTest():
  
  
  def setup_method(self):
    init_log("selenium.log",logging.INFO)
    start_test(os.path.basename(__file__))
    self.vars={}
    read_config(self,"../config.ini")

    try:
      self.driver = init_driver(self)
    except:
      logging.error('Prepare webdriver error', exc_info=True)
      self.driver.quit()
  def teardown_method(self):
    end_test(os.path.basename(__file__))
    self.driver.quit()
 
  def SA_0024(self):
    connect_web(self)
    login_web(self,self.vars["account_user"][0],self.vars["account_password"][0])
    check_text(self,By.XPATH,"//ul[@id='/admin$Menu']/li[5]","Solutions","check Solutions")
    click_button(self,By.XPATH,"//ul[@id='/admin$Menu']/li[5]","Solutions","click Solutions button")
    logging.info("---------click solution button-------")
    click_button(self,By.XPATH,"//tr[1]//td[2]//span[1] ","test","click Solutions button")
    click_button(self,By.XPATH,"/html[1]/body[1]/div[1]/div[1]/div[1]/div[2]/div[2]/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div[2]/div[1]/button[2]/span[1]/span[1] ","Solution Package","click Solutions button")
    self.driver.find_element_by_id("upload-file").send_keys("/Users/chenyongming/Desktop/custom_image.gsp")
    
     
  
    logging.info('########################pass #########################') 
    logging.info('########################selenium test stop #########################') 
    time.sleep(int(self.vars["DelayTime"]))

if __name__ == "__main__":
  driver = SeleniumTest()
  driver.setup_method()
  driver.SA_0024()
  driver.teardown_method()